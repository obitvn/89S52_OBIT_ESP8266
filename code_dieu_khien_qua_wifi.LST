C51 COMPILER V9.59.0.0   CODE_DIEU_KHIEN_QUA_WIFI                                          11/02/2018 15:51:24 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE CODE_DIEU_KHIEN_QUA_WIFI
OBJECT MODULE PLACED IN code_dieu_khien_qua_wifi.OBJ
COMPILER INVOKED BY: F:\Cai phan mem\Keil C 8051\C51\BIN\C51.EXE code_dieu_khien_qua_wifi.c OPTIMIZE(8,SPEED) BROWSE DEB
                    -UG OBJECTEXTEND TABS(2)

line level    source

   1          /*************************************************************
   2          Dieu khien thi bi qua mang Internet dung ESP8266 và 89S52
   3          Code by Vu Thai
   4          SangTaoClub.Net
   5          **************************************************************/
   6          #include <REGX52.H>
   7          #include <string.h>
   8          #define SIZE    8  //Bo dem buffer
   9          #define TBDK    6  //So TB dieu khien
  10          //Khai bao chan giao tiep LCD16x2 4bit
  11          #define LCD_RS  P1_6
  12          #define LCD_RW  P1_5
  13          #define LCD_EN  P1_4
  14          #define LCD_D4  P1_3
  15          #define LCD_D5  P1_2
  16          #define LCD_D6  P1_1
  17          #define LCD_D7  P1_0
  18          //Khai bao cac thiet bi ngoai vi
  19          #define TB1   P1_7
  20          #define TB2   P2_7
  21          #define TB3   P1_2
  22          #define TB4   P1_3
  23          #define TB5   P1_6
  24          #define TB6   P1_7
  25          #define WRST  P3_7
  26          #define STT   P0_4
  27          #define LINK  P0_5
  28          #define DQ    P2_4
  29          //Khai bao cac bien, bo dem va mang du lieu
  30          unsigned char u_data, m, k, uptime, tm, tn;
  31          unsigned char stt_ok, send_ok, ok_200, get, linked, http_buffer[75], str_len[5];
  32          unsigned char buffer[SIZE], control[TBDK];
  33          unsigned char temp, err, time_1;
  34          //Chuong trinh tao tre delay
  35          void delay_us(unsigned int t){
  36   1              while(t--);
  37   1      }
  38          void delay_ms(unsigned int t){
  39   1        unsigned int i;
  40   1        unsigned char j;
  41   1        for(i=0;i<t;i++)
  42   1          for(j=0;j<140;j++);
  43   1      }
  44          /****************Ctr giao tiep IC DS18B20***************************/
  45          void delay_18B20(unsigned int ti){
  46   1          while(ti--);
  47   1      }
  48          void Init_18B20(void){
  49   1          DQ = 1;   
  50   1          delay_18B20(15);
  51   1          DQ = 0;   
  52   1          delay_18B20(75);
  53   1          DQ = 1;   
  54   1          delay_18B20(25);    
C51 COMPILER V9.59.0.0   CODE_DIEU_KHIEN_QUA_WIFI                                          11/02/2018 15:51:24 PAGE 2   

  55   1      }
  56          unsigned char ReadOneChar(void){
  57   1          unsigned char i=0;
  58   1          unsigned char dat = 0;
  59   1          for (i=8;i>0;i--){
  60   2                DQ = 0;
  61   2                dat>>=1;
  62   2                DQ = 1;
  63   2                if(DQ)
  64   2                dat |= 0x80;
  65   2                delay_18B20(5);
  66   2          }
  67   1          return(dat);
  68   1      }
  69          void WriteOneChar(unsigned char dat){
  70   1          unsigned char i=0;
  71   1          for (i=8; i>0; i--){
  72   2              DQ = 0;
  73   2              DQ = dat&0x01;
  74   2              delay_18B20(5);
  75   2              DQ = 1;
  76   2              dat>>=1;
  77   2          }
  78   1      }
  79          void ReadTemperature(void){ 
  80   1          unsigned char a=0;
  81   1          unsigned char b=0;
  82   1        EA=0;//Cam ngat tranh viec anh huong qua trinh doc nhiet do
  83   1          Init_18B20();
  84   1          WriteOneChar(0xCC);        // Bo qua ROM
  85   1          WriteOneChar(0x44);
  86   1          delay_18B20(15); 
  87   1          Init_18B20();
  88   1          WriteOneChar(0xCC);
  89   1          WriteOneChar(0xBE);    //Doc nhiet do
  90   1          delay_18B20(15);
  91   1          a=ReadOneChar();        //Read temp low value
  92   1          b=ReadOneChar();          //Read temp high value
  93   1          temp=((b*256+a)>>4);    //gia tri nhiet do luu vao bien temp
  94   1        temp=temp-2;
  95   1        EA=1; //Doc xong thi cho phep ngat
  96   1      }//End code DS18B20
  97          /**************Ctr giao tiep LCD 16x2 4bit**********************/
  98          void LCD_Enable(void){
  99   1              LCD_EN =1;
 100   1              delay_us(5);
 101   1              LCD_EN=0;
 102   1              delay_us(60); 
 103   1      }
 104          void LCD_Send4Bit(unsigned char Data){
 105   1              LCD_D4=Data & 0x01;
 106   1              LCD_D5=(Data>>1)&1;
 107   1              LCD_D6=(Data>>2)&1;
 108   1              LCD_D7=(Data>>3)&1;
 109   1      }
 110          void LCD_SendCommand(unsigned char command){
 111   1              LCD_Send4Bit(command >>4);
 112   1              LCD_Enable();
 113   1              LCD_Send4Bit(command);
 114   1              LCD_Enable();
 115   1      }
 116          void lcd_clear(){
C51 COMPILER V9.59.0.0   CODE_DIEU_KHIEN_QUA_WIFI                                          11/02/2018 15:51:24 PAGE 3   

 117   1              LCD_SendCommand(0x01); 
 118   1              delay_ms(10);
 119   1      }
 120          void lcd_init(){
 121   1              LCD_Send4Bit(0x00);
 122   1              delay_ms(20);
 123   1              LCD_RS=0;
 124   1              LCD_RW=0;
 125   1              LCD_Send4Bit(0x03);
 126   1              LCD_Enable();
 127   1              delay_ms(5);
 128   1              LCD_Enable();
 129   1              delay_us(110);
 130   1              LCD_Enable();
 131   1              LCD_Send4Bit(0x02);
 132   1              LCD_Enable();
 133   1              LCD_SendCommand( 0x28 );
 134   1              LCD_SendCommand( 0x0c); 
 135   1              LCD_SendCommand( 0x06 );
 136   1              LCD_SendCommand(0x01);
 137   1      }
 138          void lcd_gotoxy(unsigned char x, unsigned char y){
 139   1              unsigned char address;
 140   1              if(!y)address=(0x80+x);
 141   1              else address=(0xc0+x);
 142   1              delay_us(1000);
 143   1              LCD_SendCommand(address);
 144   1              delay_us(50);
 145   1      }
 146          void lcd_putchar(unsigned char Data){//Ham Gui 1 Ki Tu
 147   1              LCD_RS=1;
 148   1              LCD_SendCommand(Data);
 149   1              LCD_RS=0 ;
 150   1      }
 151          void lcd_puts(unsigned char *s){//Ham gui 1 chuoi ky tu
 152   1              while (*s){
 153   2                      lcd_putchar(*s);
 154   2                      s++;
 155   2              }
 156   1      }
 157          void num_str(unsigned char num){
 158   1           if(num>99){
 159   2          str_len[0]=(num/100)+48;
 160   2          str_len[1]=(num%100/10)+48;
 161   2          str_len[2]=(num%10)+48;
 162   2         }else if(num>9){
 163   2          str_len[0]=(num/10)+48;
 164   2          str_len[1]=(num%10)+48;
 165   2          str_len[2]=0;
 166   2         }else{
 167   2          str_len[0]=num+48;
 168   2          str_len[1]=0;
 169   2          str_len[2]=0;
 170   2        }
 171   1      }
 172          
 173          void send_byte(unsigned char udata){
 174   1          if(udata){
 175   2          SBUF=udata;
 176   2          while(!TI); TI=0;
 177   2        }
 178   1      }
C51 COMPILER V9.59.0.0   CODE_DIEU_KHIEN_QUA_WIFI                                          11/02/2018 15:51:24 PAGE 4   

 179          void send_r(unsigned char *u){
 180   1          while(*u)send_byte(*u++);    
 181   1      }
 182          void send_buf(unsigned char *u, unsigned char ulen){
 183   1          unsigned char z;
 184   1          for(z=0;z<ulen;z++)send_byte(*u++);    
 185   1      }
 186          void send_f(unsigned char code *u){
 187   1          while(*u)send_byte(*u++);  
 188   1      }
 189          void clear(void){
 190   1          unsigned char z;
 191   1          for(z=0;z<SIZE;z++)buffer[z]='\0';
 192   1      }
 193          unsigned char len_http(unsigned char len, unsigned char code *d){
 194   1          while(*d){
 195   2          http_buffer[len]= (*d++);
 196   2              len++;
 197   2          }
 198   1          return len;
 199   1      }
 200          unsigned char len_http_r(unsigned char len, unsigned char *d){
 201   1          while(*d){
 202   2          http_buffer[len]= (*d++);
 203   2              len++;
 204   2          }
 205   1          return len;
 206   1      } 
 207          void wlan_init(){
 208   1        unsigned char e=10;
 209   1          WRST=0;
 210   1        delay_ms(100);
 211   1        WRST=1;
 212   1          delay_ms(4000);
 213   1          stt_ok=0; 
 214   1        lcd_gotoxy(0,1);
 215   1        ES=1; EA=1;
 216   1        while(e--){
 217   2           send_f("AT\r\n"); 
 218   2           delay_ms(1000);
 219   2           if(stt_ok==1){ lcd_puts("WLAN OK!"); break; }
 220   2           if(!e){
 221   3            lcd_puts("WLAN ERROR!");
 222   3            TR1=0; ES=0; EA=0; time_1=0;
 223   3            while(1){
 224   4              STT=~STT;
 225   4              delay_ms(750);
 226   4              if(++time_1>120){ TR1=1; ES=1; EA=1; time_1=1; break; }
 227   4            } //CPU stop
 228   3           }
 229   2        }
 230   1          send_f("AT+CWJAP=\"Obit team\",\"tesla-obit_team\"\r\n"); //Ket noi vao wifi nha ban
 231   1          delay_ms(2000);
 232   1        //
 233   1        delay_ms(2000); 
 234   1      }
 235          unsigned char getkey(unsigned char key){
 236   1        ES=0; //Cam ngat uart
 237   1        while(!RI);   
 238   1        if(key==SBUF){ RI=0; ES=1; return 1; }
 239   1        else{ RI=0; ES=1; return 0; } 
 240   1      }
C51 COMPILER V9.59.0.0   CODE_DIEU_KHIEN_QUA_WIFI                                          11/02/2018 15:51:24 PAGE 5   

 241          void ket_noi(){
 242   1          unsigned char do_dai, f=250;
 243   1        LINK=1;
 244   1        lcd_clear(); lcd_puts("TCP Connecting..");    
 245   1        if(P1_5){
 246   2          lcd_gotoxy(0,1);
 247   2          lcd_puts(">TO SERVER");
 248   2          send_f("AT+CIPSTART=\"TCP\",\"sangtaoclub.net\",80\r\n");
 249   2        }else{
 250   2          lcd_gotoxy(0,1);
 251   2          lcd_puts(">LOCALHOST");
 252   2          send_f("AT+CIPSTART=\"TCP\",\"192.168.0.107\",80\r\n");
 253   2        }
 254   1          linked=0; 
 255   1          while(f--){
 256   2          if(!f){
 257   3            lcd_clear(); lcd_puts("No Connect!");
 258   3            LINK=1; delay_ms(10000);
 259   3            uptime=150; err++; goto quit;
 260   3          }
 261   2          if(linked==1)break;
 262   2          delay_ms(40);
 263   2        }
 264   1        LINK=0;
 265   1        lcd_clear();lcd_puts("Connect OK!"); 
 266   1        ReadTemperature(); 
 267   1          do_dai=len_http(0,"GET /g.php?t=");
 268   1          num_str(temp);
 269   1          do_dai=len_http_r(do_dai,str_len);
 270   1        lcd_gotoxy(0,1); lcd_puts("Temp: "); lcd_puts(str_len); lcd_puts(" C"); //Show temp
 271   1          do_dai=len_http(do_dai," HTTP/1.0\r\n");    
 272   1          if(P1_5)do_dai=len_http(do_dai,"Host: dktb.sangtaoclub.net\r\n\r\n"); //server
 273   1        else do_dai=len_http(do_dai,"Host: 192.168.0.107\r\n\r\n");  //localhost
 274   1        num_str(do_dai); LINK=1;
 275   1          send_f("AT+CIPSEND="); send_r(str_len); send_f("\r\n");  //Send
 276   1        while(!getkey('>'));  //Check key >
 277   1        LINK=0; lcd_clear(); lcd_puts("Send HTTP...");
 278   1          send_buf(http_buffer,do_dai);
 279   1        LINK=1; send_ok=0; f=255;
 280   1        while(f--){
 281   2          if(!f){
 282   3            lcd_clear(); lcd_puts("SEND Error!");
 283   3            delay_ms(10000);
 284   3            uptime=150; err=4; goto quit;
 285   3          }
 286   2          if(send_ok==1)break;
 287   2          delay_ms(80);
 288   2        }
 289   1        lcd_gotoxy(9,0);
 290   1        lcd_puts(" OK!");
 291   1        lcd_gotoxy(0,1);
 292   1        lcd_puts("Sent: ");
 293   1        lcd_puts(str_len);
 294   1        lcd_puts(" Byte");
 295   1        ok_200=0; get=0; f=255; 
 296   1        LINK=0;
 297   1        delay_ms(500);
 298   1        lcd_gotoxy(0,0);
 299   1        lcd_puts("Waiting Data...");
 300   1        LINK=1;
 301   1          while(f--){
 302   2          if(!f){ LINK=1;
C51 COMPILER V9.59.0.0   CODE_DIEU_KHIEN_QUA_WIFI                                          11/02/2018 15:51:24 PAGE 6   

 303   3            lcd_clear(); lcd_puts("HTTP Error!");
 304   3            delay_ms(10000);
 305   3            uptime=150; err=4; goto quit;
 306   3          }
 307   2          if(ok_200)break;
 308   2          delay_ms(100);
 309   2        } LINK=0;
 310   1        lcd_clear(); lcd_puts("HTTP 200 OK!");
 311   1        if(get==1){
 312   2          delay_ms(500);
 313   2          lcd_gotoxy(0,1);
 314   2          lcd_puts("Control...");
 315   2        }
 316   1        err=0;  
 317   1        quit: delay_ms(10);
 318   1      }    
 319          void xuly(){
 320   1          unsigned char tinh;
 321   1          if(buffer[0]=='a'){ get=1;  //GET OK
 322   2          tinh = buffer[1]-48;  //lay addr
 323   2              if(tinh<TBDK)control[tinh]=buffer[3]-48;  //save    
 324   2        }else{
 325   2              if(strcmp(buffer,"OK")==0)stt_ok=1; //OK
 326   2              else if(strcmp(buffer,"Linked")==0)linked=1; //LINK &  ALREAY CONNECT
 327   2              else if(strcmp(buffer,"ok")==0)ok_200=1; //ok 200
 328   2          else if(strcmp(buffer,"SEND OK")==0)send_ok=1;
 329   2          else if(strcmp(buffer,"ALREAY CONNECT")==0)linked=1;
 330   2          }
 331   1      }
 332                                                 
 333          void uart()interrupt 4 {   
 334   1          if(RI){
 335   2          u_data=SBUF;
 336   2          if((u_data==10 || u_data=='%') && m==0){m=1; clear(); k=0;} //mo phong su dung ky tu dau la %, ky tu cuo
             -i la Enter
 337   2            //if(u_data==10 && m==0){m=1; clear(); k=0;}
 338   2            else if(u_data==13 && m>0){xuly(); m=0;}
 339   2            else if(m>0){
 340   3                buffer[k]=u_data;
 341   3                if(++k>SIZE){m=0; clear();}
 342   3            } 
 343   2          RI=0;
 344   2        }  
 345   1      }
 346          void prog_control(){
 347   1          if(control[0]>0){ TB1=1; }else{ TB1=0; }
 348   1          if(control[1]>0){ TB2=1; }else{ TB2=0; }
 349   1          if(control[2]>0){ TB3=1; }else{ TB3=0; }
 350   1          if(control[3]>0){ TB4=1; }else{ TB4=0; }
 351   1        if(control[4]>0){ TB5=1; }else{ TB5=0; }
 352   1          if(control[5]>0){ TB6=1; }else{ TB6=0; }
 353   1      } 
 354          void main(void){ //Chuong trinh chinh
 355   1          //unsigned char ab;
 356   1        P1=0x30; LINK=1; STT=1; WRST=1;
 357   1          TMOD=0x20; SCON=0x50; TH1=TL1=0xFD; TR1=1; //UART init
 358   1          lcd_init(); //Khoi tao lcd
 359   1        delay_ms(500);
 360   1        lcd_puts("DO AN TOT NGHIEP");
 361   1        STT=0; delay_ms(500); 
 362   1        lcd_gotoxy(0,1); lcd_puts("Staring...");
 363   1        start: for(time_1=0;time_1<4;time_1++){ STT=1; delay_ms(200); STT=0; delay_ms(300); }
C51 COMPILER V9.59.0.0   CODE_DIEU_KHIEN_QUA_WIFI                                          11/02/2018 15:51:24 PAGE 7   

 364   1        /*** Thiet lap WLAN ***/
 365   1        lcd_clear(); lcd_puts("WLAN Init..."); 
 366   1          wlan_init();
 367   1        if(time_1==1){ time_1=0; goto start; }
 368   1        /*** Thiet lap nhiet do ***/
 369   1        lcd_clear(); lcd_puts("Temperature Init");
 370   1        ReadTemperature();
 371   1        while(temp>60 || temp==0){  //Check temp error
 372   2          delay_ms(1000);
 373   2          ReadTemperature();
 374   2          if(++tn>4){
 375   3            lcd_clear(); lcd_puts("Temperature");
 376   3            lcd_gotoxy(0,1); lcd_puts("Sensor Error!");
 377   3            ES=0; EA=0; TR1=0; time_1=0;
 378   3            while(1){
 379   4              STT=~STT;
 380   4              delay_ms(500);
 381   4              if(++time_1>130){ TR1=1; ES=1; EA=1; time_1=1; break; }
 382   4            } //CPU stop
 383   3            if(time_1==1)break;
 384   3          } 
 385   2        }
 386   1        if(time_1==1){ time_1=0; goto start; }
 387   1        lcd_gotoxy(12,0); lcd_puts(" OK!"); 
 388   1        lcd_gotoxy(0,1); lcd_puts("Temp: ");
 389   1        num_str(temp); lcd_puts(str_len); lcd_puts(" C");
 390   1        delay_ms(1000); uptime=150;   
 391   1          while(1){
 392   2          if(++uptime>120){  //Ket noi may chu
 393   3            uptime=0;
 394   3            ket_noi();
 395   3                prog_control(); //Dieu khien ngoai vi 
 396   3          }
 397   2          if(err>2){err=0; goto start; } //Auto Reset 
 398   2              delay_ms(100);  //Tre he thong  
 399   2          }
 400   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2156    ----
   CONSTANT SIZE    =    531    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =    108      12
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
